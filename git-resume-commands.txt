GitHub

Configuração identificação Git.
	> git config --global user.name "Geisson Oliveira"
	> git config --global user.email "geissonlucaso@gmail.com"
	> git config --list
	
Configurar chave SSH para o GitHub.
	> ssh-keygen -t ed25519 -C "geissonlucaso@gmail"
	- acessar a pasta e copiar a chave no GitHub
	
Salvar a primeira versão de um projeto.
	> git init
	> git add .
	> git commit -m "message"
	> git branch -M main
	> git remote add origin
	> git@github.com/geissonlucaso/repositorio.git
	> git push -u origin main
	
Salvar modificação no projeto.
	> git status
	> git add .
	> git commit -m "message"
	> git push
	
Demo: Clonar e modificar um projeto.
	> git clone git@github.com/usuario/repositorio.git
	> git add .
	> git commit -m "message"
	> git push
	
Verificação do histórico de versões.
	> git log
	> git log --oneline
	
Git status
	- modified, untracked, deleted
	> git add <file_name>
	> git reset  [limpa a area de stage]
	
Git diff
	> git diff <file_name>
	
Git checkout
	> git checkout <code_commit>
	> git checkout main  [volta para o ultimo commit]
	> git checkout HEAD~2
	- Não é indicado fazer alterações ao fazer checkout. Caso aconteça:
	> git reset
	> git clean -df
	> git checkout -- .
	
Arquivo .gitignore
	- Arquivos que não devem ser adicionados no repositório.
	
Remover arquivos da area de stage.
	> git status
	> git reset
	
Desfazer modificações não salvas. [Desfazer um trabalho que não será mais necessário, por exemplo.]
	> git status
	> git reset
	> git clean -df
	> git checkout -- .
	
Editor Vim
	[modo edição]
	> i  
	Sair salvando
	> <ESC>
	>:wq
	Sair descartando tudo.
	>:q!
	
Desfazer o último commit. [sem apagar as alterações contidas nele.]
	> git status
	> git reset --soft HEAD~1
	> git reset
	
Deletar commits com as modificações nos arquivos [ação destrutiva - só é possível recuperar o que esta no repositório remoto. O que estiver apenas no repositório local será perdido.].
	> git status
	> git reset --hard HEAD~1
	- para ir para um dado commit.
	> git reset --hard <cod_commit>
	
Sincronizar com o repositório remoto.
	> git pull origin main
	
Resolver push rejeitado.
	> git pull <remote> <branch>
	- Criar o commit do merge.
	> git push
	
Resolvendo conflitos.
	
	
Sobrescrever histórico no GitHub. [Ação destrutiva]
	> git push -f origin main
	
Apontar o projeto para outro repositório remoto.
	> git remote -v
	> git remote set-url origin <link>
	

	